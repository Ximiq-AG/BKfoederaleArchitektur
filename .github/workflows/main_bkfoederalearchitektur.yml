name: Build and Deploy DocFX to Azure Static Web Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) Repository auschecken
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2) Markdown-Dateien aus JNGNGY/DocFX_Test holen
      - name: Fetch External Markdown Files
        run: |
          mkdir -p DocFX_Test
          echo "Lade alle .md-Dateien aus JNGNGY/DocFX_Test/TestFolder herunter..."

          # GitHub API aufrufen, um alle .md-Dateien im TestFolder zu bekommen
          curl -s https://api.github.com/repos/JNGNGY/DocFX_Test/contents/TestFolder | \
            grep '"download_url":' | grep '\.md"' | cut -d '"' -f 4 | \
            while read file; do
              filename=$(basename "$file")
              echo "Lade $filename herunter..."
              wget -O "DocFX_Test/$filename" "$file"
            done
      # 3) .NET 8 SDK installieren
      - name: Install .NET 8
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x'

      # 4) DocFX als .NET-Tool installieren
      - name: Install DocFX
        run: |
          dotnet tool install --global docfx
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # 5) Dokumentation mit DocFX bauen
      - name: Build Documentation
        run: docfx docfx.json

      # 6) Deployment zur Azure Static Web App
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: '_site'
